import numpy as np

# Sample audio data (frequency values)
audio_data = np.array([0.5, 0.3, 0.8, 0.2, 1.0])

# Convert audio data to decibel
decibel_values = 20 * np.log10(audio_data)

# Convert audio data to amplitude values
amplitude_values = audio_data * 2

# Convert audio data to wavelength values
wavelength_values = 1 / audio_data

# Print the results
print("Audio Data: ", audio_data)
print("Decibel Values: ", decibel_values)
print("Amplitude Values: ", amplitude_values)
print("Wavelength Values: ", wavelength_values)
"""
-----------------------------------------------------------------------------------------------------------------
"""
import numpy as np
import matplotlib.pyplot as plt
from scipy.io import wavfile
from scipy.fft import fft

# Read the audio file
audio_file = "audio_sample.wav"
sampling_frequency, audio_data = wavfile.read(audio_file)

# Normalize the audio data
audio_data = audio_data / np.max(np.abs(audio_data), axis=0)

# Apply Fourier transform to the audio data
frequencies = np.fft.fftfreq(len(audio_data), 1/sampling_frequency)
spectrum = fft(audio_data)

# Plot the spectrum
plt.figure(figsize=(12, 6))
plt.plot(frequencies, np.abs(spectrum))
plt.title("Audio Spectrum")
plt.xlabel("Frequency (Hz)")
plt.ylabel("Amplitude")
plt.grid(True)
plt.show()
"""
Waw File !
"""

import os

# Function: Change file extension
def change_extension(directory):
    for file in os.listdir(directory):
        if file.endswith(".wav"):  # Select only .wav files
            old_path = os.path.join(directory, file)
            new_file_name = os.path.splitext(file)[0] + ".mp3"  # Change .wav extension to .mp3
            new_path = os.path.join(directory, new_file_name)

            # Change file extension
            os.rename(old_path, new_path)

# Function: Evaluate file size
def evaluate_file_size(file_path):
    file_size = os.path.getsize(file_path)
    print(f"File size: {file_size} bytes")

# Function: List all files in a specific directory
def list_files(directory):
    files = []
    for file in os.listdir(directory):
        file_path = os.path.join(directory, file)
        files.append(file_path)
    return files

# Function: Generate new file name
def generate_new_file_name(file_name):
    return os.path.splitext(file_name)[0] + ".mp3"

# Function: Execute the main process
def main_process(directory):
    files = list_files(directory)
    for file in files:
        if file.endswith(".wav"):
            new_file_name = generate_new_file_name(os.path.basename(file))
            new_file_path = os.path.join(directory, new_file_name)

            # Change file extension
            os.rename(file, new_file_path)

            # Evaluate file size
            evaluate_file_size(new_file_path)

# Run the functions
directory_path = "/path/to/your/audio/files"  # Directory where audio files are located
change_extension(directory_path)
main_process(directory_path)
